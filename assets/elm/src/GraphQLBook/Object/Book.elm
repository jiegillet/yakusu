-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GraphQLBook.Object.Book exposing (..)

import GraphQLBook.InputObject
import GraphQLBook.Interface
import GraphQLBook.Object
import GraphQLBook.Scalar
import GraphQLBook.ScalarCodecs
import GraphQLBook.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


author : SelectionSet String GraphQLBook.Object.Book
author =
    Object.selectionForField "String" "author" [] Decode.string


bookTranslations :
    SelectionSet decodesTo GraphQLBook.Object.Book
    -> SelectionSet (List decodesTo) GraphQLBook.Object.Book
bookTranslations object_ =
    Object.selectionForCompositeField "bookTranslations" [] object_ (identity >> Decode.list)


id : SelectionSet GraphQLBook.ScalarCodecs.Id GraphQLBook.Object.Book
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (GraphQLBook.ScalarCodecs.codecs |> GraphQLBook.Scalar.unwrapCodecs |> .codecId |> .decoder)


language : SelectionSet String GraphQLBook.Object.Book
language =
    Object.selectionForField "String" "language" [] Decode.string


notes : SelectionSet (Maybe String) GraphQLBook.Object.Book
notes =
    Object.selectionForField "(Maybe String)" "notes" [] (Decode.string |> Decode.nullable)


pages :
    SelectionSet decodesTo GraphQLBook.Object.Page
    -> SelectionSet (List decodesTo) GraphQLBook.Object.Book
pages object_ =
    Object.selectionForCompositeField "pages" [] object_ (identity >> Decode.list)


title : SelectionSet String GraphQLBook.Object.Book
title =
    Object.selectionForField "String" "title" [] Decode.string


translations :
    SelectionSet decodesTo GraphQLBook.Object.Translation
    -> SelectionSet (List decodesTo) GraphQLBook.Object.Book
translations object_ =
    Object.selectionForCompositeField "translations" [] object_ (identity >> Decode.list)


translator : SelectionSet (Maybe String) GraphQLBook.Object.Book
translator =
    Object.selectionForField "(Maybe String)" "translator" [] (Decode.string |> Decode.nullable)
